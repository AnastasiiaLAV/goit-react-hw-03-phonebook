{"version":3,"sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App.styled.js","components/App.js","index.js"],"names":["FormStyled","styled","Form","_templateObject","Object","taggedTemplateLiteral","FieldStyled","Field","_templateObject2","Button","button","_templateObject3","id","nanoid","SignupSchema","Yup","shape","name","min","max","required","matches","number","ContactForm","_ref","addContact","react_default","a","createElement","formik_esm","initialValues","validationSchema","onSubmit","value","_ref2","resetForm","_ref3","errors","touched","htmlFor","type","placeholder","ContactList_styled_templateObject","ContactList","contacts","onDeleteContact","map","key","ContactList_styled_Button","onClick","Label","label","Filter_styled_templateObject","Input","input","Filter_styled_templateObject2","Filter","onChange","Wrapper","div","App_styled_templateObject","App","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","filter","contact","find","toLowerCase","Notify","warning","setState","toConsumableArray","filterOnChange","e","target","getVisibleContact","_this$state","normalizedFilter","includes","deleteContact","contactId","prevState","inherits","createClass","contactsLoc","localStorage","getItem","parsContacts","JSON","parse","_","console","log","nextContacts","setItem","stringify","visibleContacts","components_Filter_Filter","components_ContactList_ContactList","Component","ReactDOM","createRoot","document","getElementById","render","StrictMode","components_App"],"mappings":"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","file":"static/js/main.b07b1b1d.chunk.js","sourcesContent":["import styled from \"styled-components\"\nimport { Form, Field } from \"formik\"\n\n\nexport const FormStyled = styled(Form)`\nmargin: 10px;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    width: 400px;\n    height: 200px;\n    background-color: rgba(136 144 208);\n    border-radius: 10px;\n    box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset,rgba(44, 187, 99, .15) 0 1px 2px,rgba(44, 187, 99, .15) 0 2px 4px,rgba(44, 187, 99, .15) 0 4px 8px,rgba(44, 187, 99, .15) 0 8px 16px,rgba(44, 187, 99, .15) 0 16px 32px;\n`\nexport const FieldStyled = styled(Field)`\n    color: #150000;\n    font-size: 20px;\n    font-weight: 500;\n    border-radius: 5px; \n`\nexport const Button = styled.button`\n    width: 120px;\n    background-color: #c2fbd7;\n    border-radius: 100px;\n    box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset,rgba(44, 187, 99, .15) 0 1px 2px,rgba(44, 187, 99, .15) 0 2px 4px,rgba(44, 187, 99, .15) 0 4px 8px,rgba(44, 187, 99, .15) 0 8px 16px,rgba(44, 187, 99, .15) 0 16px 32px;\n    color: rgb(19 7 69);\n    cursor: pointer;\n    display: inline-block;\n    font-family: 'Yanone Kaffeesatz', sans-serif;\n    padding: 8px 20px;\n    margin: 10px 15px;\n    text-align: center;\n    text-decoration: none;\n    transition: all 250ms;\n    border: 0;\n    font-size: 15px;\n    font-weight: 500;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n        &:hover {\n            box-shadow: rgba(44,187,99,.35) 0 -25px 18px -14px inset,rgba(44,187,99,.25) 0 1px 2px,rgba(44,187,99,.25) 0 2px 4px,rgba(44,187,99,.25) 0 4px 8px,rgba(44,187,99,.25) 0 8px 16px,rgba(44,187,99,.25) 0 16px 32px;\n            transform: scale(1.05) rotate(-1deg);\n}\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik} from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { FormStyled, FieldStyled, Button } from './Form.styled';\nconst id = nanoid(5);\n\nconst SignupSchema = Yup.object().shape({\nname: Yup.string()\n    .min(2, 'Too Short!')\n    .max(15, 'Too Long!')\n    .required('Please enter a name')\n    .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, \"Must be only letters\"),\nnumber: Yup.string()\n    .min(5, 'Too Short!')\n    .max(10, 'Too Long!')\n    .required('Please enter a number')\n    .matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, \"Must be only digits\"),\n});\n\nconst ContactForm  = ({addContact}) => {\n    return (\n        <Formik\n            initialValues={{\n                name: '',\n                number: '',\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={(value, { resetForm }) => {\n                addContact(value);\n                resetForm();\n            }}\n    >\n\n    {({ errors, touched }) => (\n        <FormStyled>\n        <label htmlFor=\"name\">Name</label>\n        <FieldStyled\n            id={id}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"enter name\"/>\n        {errors.name && touched.name ? (\n            <div>{errors.name}</div>\n        ) : null}\n        \n        <label htmlFor=\"number\">Number</label>\n        <FieldStyled\n            id={id}\n            type=\"number\"\n            name=\"number\"\n            placeholder=\"enter number\" />\n        {errors.number && touched.number ? (\n            <div>{errors.number}</div>\n        ) : null}\n        \n        <Button type=\"submit\">Add contact</Button>\n        </FormStyled>\n    )}\n    </Formik>\n    )\n};\n\nContactForm.propTypes = {\n    initialValues: PropTypes.object,\n    validationSchema: PropTypes.object,\n    onSubmit:PropTypes.func,\n}\n\nexport default ContactForm;","import styled from \"styled-components\"\n\nexport const Button = styled.button`\n    width: 80px;\n    background-color: #c2fbd7;\n    border-radius: 100px;\n    box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset,rgba(44, 187, 99, .15) 0 1px 2px,rgba(44, 187, 99, .15) 0 2px 4px,rgba(44, 187, 99, .15) 0 4px 8px,rgba(44, 187, 99, .15) 0 8px 16px,rgba(44, 187, 99, .15) 0 16px 32px;\n    color: rgb(19 7 69);\n    cursor: pointer;\n    display: inline-block;\n    font-family: 'Yanone Kaffeesatz', sans-serif;\n    padding: 8px 20px;\n    margin: 10px 15px;\n    text-align: center;\n    text-decoration: none;\n    transition: all 250ms;\n    border: 0;\n    font-size: 11px;\n    font-weight: 500;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n        &:hover {\n            box-shadow: rgba(44,187,99,.35) 0 -25px 18px -14px inset,rgba(44,187,99,.25) 0 1px 2px,rgba(44,187,99,.25) 0 2px 4px,rgba(44,187,99,.25) 0 4px 8px,rgba(44,187,99,.25) 0 8px 16px,rgba(44,187,99,.25) 0 16px 32px;\n            transform: scale(1.05) rotate(-1deg);\n}\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './ContactList.styled';\n\nconst ContactList = ({contacts, onDeleteContact}) => {\n    return (\n        <ol>\n        {contacts.map(({ id, name, number }) => \n            (<li key={id}>\n                <p>{name}</p>\n                <p>{number}</p>\n                <Button type='button' onClick={() => onDeleteContact(id)}>Delete</Button>\n            </li>)\n            \n        )\n        }\n        </ol>\n    )\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.exact({\n    id:PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number:PropTypes.string.isRequired\n    })),\n  onDeleteContact:PropTypes.func.isRequired\n}\n\nexport default ContactList;","import styled from \"styled-components\"\n\nexport const Label = styled.label`\n    font-size: 22px;\n    font-weight: 500;\n`\nexport const Input = styled.input`\n    padding: 0 10px;\n    margin: 0 20px;\n    color: #150000;\n    font-size: 20px;\n    font-weight: 400;\n    border-radius: 5px; \n    &:hover, &:focus{\n        box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset,rgba(44, 187, 99, .15) 0 1px 2px,rgba(44, 187, 99, .15) 0 2px 4px,rgba(44, 187, 99, .15) 0 4px 8px,rgba(44, 187, 99, .15) 0 8px 16px,rgba(44, 187, 99, .15) 0 16px 32px;\n    }\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = ({onChange, value}) => {\n    return (\n        <Label htmlFor=\"filter\">\n            Find contacts by name \n            <Input type=\"text\" name=\"filter\" onChange={onChange} value={value} />\n        </Label>\n    )\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;","import styled from \"styled-components\"\n\nexport const Wrapper = styled.div`\n    padding: 30px;\n`","import React, {Component} from \"react\";\nimport { nanoid } from 'nanoid';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport ContactForm from \"./Form/Form\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport { Wrapper } from \"./App.styled\";\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  }\n\n  componentDidMount() {\n    const contactsLoc = localStorage.getItem('contactsLoc');\n    const parsContacts = JSON.parse(contactsLoc);\n    if (parsContacts) {\n      this.setState({ contacts: parsContacts });\n    }\n  }\n  componentDidUpdate(_, prevState) {\n    console.log('App componentDidUpdate');\n    \n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n\n    // console.log('nextContacts:', ...nextContacts);\n    // console.log('prevContacts:', prevContacts);\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contactsLoc', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: nanoid(5),\n      name,\n      number,\n    };\n\n    const sameСontacts = this.state.contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase() || contact.number === number);\n\n    if (sameСontacts) {\n      Notify.warning('This contact already exists');\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts ],\n    }));\n  }\n\n  filterOnChange = (e) => {\n    this.setState({\n      filter: e.target.value,\n    })\n  }\n\n    getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();    \n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  \n  render() {\n    const { filter } = this.state;\n    const { addContact, filterOnChange, deleteContact} = this;\n    const visibleContacts = this.getVisibleContact();\n\n    return (\n      <Wrapper>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={addContact}/>\n\n        <h2>Contacts</h2>\n        <Filter onChange={filterOnChange} value={filter}/>\n        <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n      </Wrapper>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport 'normalize.css';\nimport App from './components/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}